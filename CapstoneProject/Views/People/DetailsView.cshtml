@model CapstoneProject.Models.Person

@*@{
        ViewBag.Title = "Details";
    }

    <h2>Details</h2>

    <div class >
    <p class="headerText">Your filled in Personal Information</p>

    <p style="font-size:150%;"> Full Name :@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</p>
    <p> @Html.DisplayFor(model => model.DOB)</p>
    <p class="headerText">Contact Information:</p>
    <p> @Html.DisplayFor(model => model.Email)</p>
    <p> @Html.DisplayFor(model => model.PhoneNumber)</p>
    <p class="headerText">Address Information:</p>
    <p> @Html.DisplayFor(model => model.StreetAddress)</p>
    <p> @Html.DisplayFor(model => model.StreetAddress)</p>
    <p> @Html.DisplayFor(model => model.City)</p>
    <p>@Html.DisplayFor(model => model.State)@Html.DisplayFor(model => model.State)@Html.DisplayFor(model => model.Zipcode)</p>
    <p class="headerText">Doctor Information:</p>
    <a href="@Url.Action("Details","Doctors",new { id = Model.DoctorId })"> @Model.Doctor.FirstName </a>


    <p class="headerText">Asthma Triggers</p>

    @if (Model.IsPollutionATrigger == true)
    {
        <p class="headerText"> Air Pollution</p>
    }
    @if (Model.ArePollensATrigger == true)
    {
        <p class="headerText"> Pollens</p>
    }
    @if (Model.AreDustMitesATrigger == true)
    {
        <p class="headerText"> DustMites</p>
    }
    @if (Model.IsTobaccoSmokeATrigger == true)
    {
        <p class="headerText"> Tobacco Smoke  </p>
    }
    @if (Model.IsMoldATrigger == true)
    {
        <p class="headerText"> Mold  </p>
    }
    @if (Model.AreBurningWoodOrGrassATrigger == true)
    {
        <p class="headerText"> Burning Wood and Grass  </p>
    }*@

<style type="text/css">
    .tg {
        border-collapse: collapse;
        border-spacing: 0;
    }

        .tg td {
            font-family: Arial, sans-serif;
            font-size: 14px;
            padding: 10px 5px;
            border-style: solid;
            border-width: 1px;
            overflow: hidden;
            word-break: normal;
            border-color: black;
        }

        .tg th {
            font-family: Arial, sans-serif;
            font-size: 14px;
            font-weight: normal;
            padding: 10px 5px;
            border-style: solid;
            border-width: 1px;
            overflow: hidden;
            word-break: normal;
            border-color: black;
        }

        .tg .tg-zlqz {
            font-weight: bold;
            background-color: #c0c0c0;
            border-color: inherit;
            text-align: center;
            vertical-align: top
        }

        .tg .tg-efol {
            font-weight: bold;
            background-color: #c0c0c0;
            border-color: inherit;
            text-align: center;
            vertical-align: middle
        }

        .tg .tg-0pky {
            border-color: inherit;
            text-align: left;
            vertical-align: top
        }
</style>
<table class="tg">
    <tr>
        <th class="tg-efol" colspan="2">Personal Information</th>
    </tr>
    <tr>
        <td class="tg-0pky">Full Name</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</td>
    </tr>
    <tr>
        <td class="tg-0pky">Date of Birth</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.DOB)</td>
    </tr>
    <tr>
        <td class="tg-0pky">Email</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.Email)</td>
    </tr>
    <tr>
        <td class="tg-0pky">Phone Number</td>
        <td class="tg-0pky"> @Html.DisplayFor(model => model.PhoneNumber)</td>
    </tr>
    <tr>
        <td class="tg-zlqz" colspan="2">Address Details</td>
    </tr>
    <tr>
        <td class="tg-0pky">Street</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.StreetAddress)</td>
    </tr>
    <tr>
        <td class="tg-0pky">City</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.City)</td>
    </tr>
    <tr>
        <td class="tg-0pky">State</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.State)</td>
    </tr>
    <tr>
        <td class="tg-0pky">Zipcode</td>
        <td class="tg-0pky">@Html.DisplayFor(model => model.Zipcode)</td>
    </tr>
    <tr>
        <td class="tg-0pky">Doctor<br>(click for Details)</td>
        <td class="tg-0pky"><a href="@Url.Action("Details","Doctors",new { id = Model.DoctorId })"> @Model.Doctor.FirstName @Model.Doctor.LastName</a></td>
    </tr>
    <tr>
        <td class="tg-zlqz" colspan="2">Your Asthma Triggers</td>
    </tr>
    <tr>
        <td class="tg-0pky" colspan="2">
            @if (Model.IsPollutionATrigger == true)
            {
                <p class="headerText"> Air Pollution</p>
            }
            @if (Model.ArePollensATrigger == true)
            {
                <p class="headerText"> Pollens</p>
            }
            @if (Model.AreDustMitesATrigger == true)
            {
                <p class="headerText"> DustMites</p>
            }
            @if (Model.IsTobaccoSmokeATrigger == true)
            {
                <p class="headerText"> Tobacco Smoke  </p>
            }
            @if (Model.IsMoldATrigger == true)
            {
                <p class="headerText"> Mold  </p>
            }
            @if (Model.AreBurningWoodOrGrassATrigger == true)
            {
                <p class="headerText"> Burning Wood and Grass  </p>
            }
        </td>
    </tr>
</table>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")|
    @*@Html.ActionLink("Asthma Action Plan",)|*@
    @Html.ActionLink("Asthma Action Plan", "Index", "AsthmaActionPlans", new { id = Model.Id }, htmlAttributes: null)|

    @Html.ActionLink("Asthma Details", "Index", "AsthmaDetails")|
    @Html.ActionLink("AirQuality", "Index", "AirQuality", new { City = Model.City }, htmlAttributes: null)

</p>
